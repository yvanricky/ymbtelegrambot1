â€Ž
â€Ž
â€Ž```python
â€Žimport openai
â€Žimport requests
â€Žfrom telegram import Update, ReplyKeyboardMarkup
â€Žfrom telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
â€Žfrom apscheduler.schedulers.background import BackgroundScheduler
â€Ž
â€Ž# === CONFIGURATION ===
â€ŽTELEGRAM_BOT_TOKEN = "8141332488:AAFxCMsY4MZS-Yy_OADJjRvvvmNbBbThBNs"
â€ŽOPENAI_API_KEY = "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"
â€ŽSPORTS_API_KEY = "50b91d3cd0de1db0e39f8fe52d990406"
â€ŽCANAL_ID = "@YMBG Infos Pronos Sport"
â€ŽGROUP_ID = -1002712500298Â  # Groupe Telegram des usagers
â€Ž
â€Žopenai.api_key = OPENAI_API_KEY
â€Ž
â€Ž# === COMMANDES ===
â€Ždef start(update: Update, context: CallbackContext):
â€ŽÂ Â Â  keyboard = [['/affiche', '/pronostic'], ['/strategie', '/infos']]
â€ŽÂ Â Â  reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
â€ŽÂ Â Â  update.message.reply_text("ðŸŽ¯ Bienvenue sur YMB Bot!", reply_markup=reply_markup)
â€Ž
â€Ždef handle_text(update: Update, context: CallbackContext):
â€ŽÂ Â Â  text = update.message.text.lower()
â€ŽÂ Â Â  if text == "/affiche":
â€ŽÂ Â Â Â Â Â Â  update.message.reply_text(get_today_matches())
â€ŽÂ Â Â  else:
â€ŽÂ Â Â Â Â Â Â  update.message.reply_text(ask_openai(text))
â€Ž
â€Ždef ask_openai(prompt):
â€ŽÂ Â Â  response = openai.ChatCompletion.create(
â€ŽÂ Â Â Â Â Â Â  model="gpt-4",
â€ŽÂ Â Â Â Â Â Â  messages=[{"role": "user", "content": prompt}]
â€Ž)
â€ŽÂ Â Â  return response.choices[0].message.content.strip()
â€Ž
â€Ždef get_today_matches():
â€ŽÂ Â Â  url = "https://v3.football.api-sports.io/fixtures?date=today"
â€ŽÂ Â Â  headers = {"x-apisports-key": SPORTS_API_KEY}
â€ŽÂ Â Â  response = requests.get(url, headers=headers)
â€ŽÂ Â Â  data = response.json()
â€ŽÂ Â Â  if not data['response']:
â€ŽÂ Â Â Â Â Â Â  return "Aucun match prÃ©vu aujourd'hui."
â€ŽÂ Â Â  matches = []
â€ŽÂ Â Â  for match in data['response'][:10]:
â€ŽÂ Â Â Â Â Â Â  teams = match['teams']
â€ŽÂ Â Â Â Â Â Â  time = match['fixture']['date'][11:16]
â€ŽÂ Â Â Â Â Â Â  matches.append(f"{time} â€“ {teams['home']['name']} vs {teams['away']['name']}")
â€ŽÂ Â Â  return "\n".join(matches)
â€Ž
â€Ždef schedule_daily_post(bot):
â€ŽÂ Â Â  scheduler = BackgroundScheduler()
â€ŽÂ Â Â  def post():
â€ŽÂ Â Â Â Â Â Â  prompt = "Donne deux pronostics sportifs pour aujourd'hui avec analyse."
â€ŽÂ Â Â Â Â Â Â  message = ask_openai(prompt)
â€ŽÂ Â Â Â Â Â Â  # Publication dans le canal
â€ŽÂ Â Â Â Â Â Â  bot.send_message(chat_id=CANAL_ID, text=message)
â€ŽÂ Â Â Â Â Â Â  # Publication dans le groupe
â€ŽÂ Â Â Â Â Â Â  bot.send_message(chat_id=GROUP_ID, text=message)
â€ŽÂ Â Â  scheduler.add_job(post, 'cron', hour=7, minute=30)
â€ŽÂ Â Â  scheduler.start()
â€Ž
â€Ž# === LANCEMENT DU BOT ===
â€Ždef main():
â€ŽÂ Â Â  updater = Updater(TELEGRAM_BOT_TOKEN, use_context=True)
â€ŽÂ Â Â  dp = updater.dispatcher
â€ŽÂ Â Â  dp.add_handler(CommandHandler("start", start))
â€ŽÂ Â Â  dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_text))
â€ŽÂ Â Â  schedule_daily_post(updater.bot)
â€ŽÂ Â Â  updater.start_polling()
â€ŽÂ Â Â  updater.idle()
â€Ž
â€Žif __name__ == "__main__":
â€ŽÂ Â Â  main()
â€Ž```
â€Ž
â€Ž
